<launch>
<!-- Determine using xacro or urdf files -->
<arg name="use_xacro" default="false" />
<arg if="$(arg use_xacro)" name="filename" default="navvis.xacro" />
<arg unless="$(arg use_xacro)" name="filename" default="navvis.urdf" />

<!-- Determine using gui or not -->
<arg name="jsp_gui" default="true" />

<!-- Determine the file -->
<arg name="file" default = "$(find navvis_descriptions)/urdf/$(arg filename)" />

<!-- Set robot description based on urdf or xacro -->
<param if="$(arg use_xacro)" name="robot_description" command="$(find xacro)/xacro $(arg file)" />
<param unless="$(arg use_xacro)" name="robot_description" textfile="$(arg file)" />

<arg name="wheel_rotation" value="$(eval 3.14159265 / -2)" />

<!-- Create the JSP gui if desired -->
<node if="$(arg jsp_gui)" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" />
<!-- <group unless="$(arg jsp_gui)">
    <node pkg="tf2_ros" type="static_transform_publisher" name="init_left_wheel" args="-0.10 .4 0.0 0 0 $(arg wheel_rotation) base wheel_left" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="init_right_wheel" args="-0.10 -.4 0 0 0 $(arg wheel_rotation) base wheel_right" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="init_center_wheel" args=".10 0.0 -0.05 0 0 $(arg wheel_rotation) base wheel_center" />
</group> -->

<!-- Utilizing pub from rostopic to set wheels: DOESNT WORK -->
<node unless="$(arg jsp_gui)" pkg="rostopic" type="rostopic" name="init_wheels" args="pub -l /joint_states sensor_msgs/JointState 
&quot;{
    header: auto, 
    name: ['base_wheel_left_joint', 'base_wheel_right_joint', 'base_wheel_center_joint'], 
    position: [0,0,0]
}&quot;"/>

<!-- Command which works fine in cmd: -->
<!-- rostopic pub -l /joint_states sensor_msgs/JointState "{header: {seq: 1, stamp: {secs: 1, nsecs: 0}, frame_id: 'base'}, name: ['base_wheel_left_joint', 'base_wheel_right_joint', 'base_wheel_center_joint'], position: [0,0,0]}" -->

<!-- Run static publisher for fixed joints -->
<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />    

<!-- RVIZ -->
<node pkg="rviz" type="rviz" name="rviz" args="-d $(find navvis_descriptions)/config/config.rviz" required="true" />
</launch>

